{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1/rent-house",
    "paths": {
        "/admin/active-comment/": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "create users",
                "operationId": "AdminController.ActivateComment",
                "parameters": [
                    {
                        "in": "header",
                        "name": "key",
                        "description": "admin key",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "commentID",
                        "description": "houseID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} success"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/admin/active-house/": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "create users",
                "operationId": "AdminController.ActivateHouse",
                "parameters": [
                    {
                        "in": "header",
                        "name": "key",
                        "description": "admin key",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "houseID",
                        "description": "houseID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} success"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/admin/active-owner/": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "create users",
                "operationId": "AdminController.ActivateOwner",
                "parameters": [
                    {
                        "in": "header",
                        "name": "key",
                        "description": "admin key",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "ownerID",
                        "description": "ownerID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} success"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/admin/page-wait-comments/": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get page comment",
                "operationId": "AdminController.GetPageWaitComment",
                "parameters": [
                    {
                        "in": "header",
                        "name": "key",
                        "description": "admin key",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "the page",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "the count",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Comment"
                        }
                    }
                }
            }
        },
        "/admin/page-wait-houses/": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get page comment",
                "operationId": "AdminController.GetPageWaitHouse",
                "parameters": [
                    {
                        "in": "header",
                        "name": "key",
                        "description": "admin key",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "the page",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "the count",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.House"
                        }
                    }
                }
            }
        },
        "/admin/page-wait-owners/": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get page comment",
                "operationId": "AdminController.GetPageWaitOwner",
                "parameters": [
                    {
                        "in": "header",
                        "name": "key",
                        "description": "admin key",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "the page",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "the count",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Owner"
                        }
                    }
                }
            }
        },
        "/admin/wait-comments/": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get all wait comments",
                "operationId": "AdminController.GetAllWaitComment",
                "parameters": [
                    {
                        "in": "header",
                        "name": "key",
                        "description": "admin key",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.House"
                        }
                    }
                }
            }
        },
        "/admin/wait-houses/": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get all renters",
                "operationId": "AdminController.GetAllWaitHouse",
                "parameters": [
                    {
                        "in": "header",
                        "name": "key",
                        "description": "admin key",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.House"
                        }
                    }
                }
            }
        },
        "/admin/wait-owners/": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "get all wait owners",
                "operationId": "AdminController.GetAllWaitOwner",
                "parameters": [
                    {
                        "in": "header",
                        "name": "key",
                        "description": "admin key",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Owner"
                        }
                    }
                }
            }
        },
        "/chat/": {
            "get": {
                "tags": [
                    "chat"
                ],
                "description": "WebSocket",
                "operationId": "WebsocketController.WebSocket"
            }
        },
        "/comment/{commentID}/": {
            "get": {
                "tags": [
                    "comment"
                ],
                "description": "get user by uid",
                "operationId": "CommentController.Get",
                "parameters": [
                    {
                        "in": "header",
                        "name": "token",
                        "description": "The token string",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "commentID",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Comment"
                        }
                    },
                    "403": {
                        "description": ":commentID is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "comment"
                ],
                "description": "update the user",
                "operationId": "CommentController.Update",
                "parameters": [
                    {
                        "in": "header",
                        "name": "token",
                        "description": "The token string",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "commentID",
                        "description": "The uid you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Comment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": ":commentID is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "comment"
                ],
                "description": "delete the user",
                "operationId": "CommentController.Delete",
                "parameters": [
                    {
                        "in": "header",
                        "name": "token",
                        "description": "The token string",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "commentID",
                        "description": "The uid you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "commentID is empty"
                    }
                }
            }
        },
        "/house/": {
            "get": {
                "tags": [
                    "house"
                ],
                "description": "get all renters",
                "operationId": "HouseController.GetAllActivateHouse",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Renter"
                        }
                    }
                }
            }
        },
        "/house/page": {
            "get": {
                "tags": [
                    "house"
                ],
                "description": "get page houses",
                "operationId": "HouseController.GetPageActivateHouse",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "description": "page",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "count",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.House"
                        }
                    }
                }
            }
        },
        "/house/{houseID}/": {
            "get": {
                "tags": [
                    "house"
                ],
                "description": "get user by uid",
                "operationId": "HouseController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "houseID",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Renter"
                        }
                    },
                    "403": {
                        "description": ":houseID is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "house"
                ],
                "description": "update the user",
                "operationId": "HouseController.Update",
                "parameters": [
                    {
                        "in": "header",
                        "name": "token",
                        "description": "The token string",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "houseID",
                        "description": "The uid you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Renter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": ":houseID is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "house"
                ],
                "description": "delete the user",
                "operationId": "HouseController.Delete",
                "parameters": [
                    {
                        "in": "header",
                        "name": "token",
                        "description": "The token string",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "houseID",
                        "description": "The uid you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "houseID is empty"
                    }
                }
            }
        },
        "/house/{houseID}/add-comment/": {
            "post": {
                "tags": [
                    "house"
                ],
                "description": "create users",
                "operationId": "HouseController.AddComment",
                "parameters": [
                    {
                        "in": "header",
                        "name": "token",
                        "description": "The token string",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Comment"
                        }
                    },
                    {
                        "in": "path",
                        "name": "houseID",
                        "description": "the house id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} success"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/house/{houseID}/comments/": {
            "get": {
                "tags": [
                    "house"
                ],
                "description": "get all renters",
                "operationId": "HouseController.GetAllComment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "houseID",
                        "description": "the house-id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Renter"
                        }
                    }
                }
            }
        },
        "/house/{houseID}/page-comments/": {
            "get": {
                "tags": [
                    "house"
                ],
                "description": "get page comment",
                "operationId": "HouseController.GetPageComment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "houseID",
                        "description": "the houseID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "the page",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "the count",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Comment"
                        }
                    }
                }
            }
        },
        "/owner/": {
            "get": {
                "tags": [
                    "owner"
                ],
                "description": "get all owners",
                "operationId": "OwnerController.GetAll",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/owner/login/": {
            "post": {
                "tags": [
                    "owner"
                ],
                "description": "create users",
                "operationId": "OwnerController.CreateRenter",
                "parameters": [
                    {
                        "in": "body",
                        "name": "login",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} token"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/owner/sign-up/": {
            "post": {
                "tags": [
                    "owner"
                ],
                "description": "create users",
                "operationId": "OwnerController.CreateOwner",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Owner"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} models.UserID"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/owner/{ownerID}/": {
            "get": {
                "tags": [
                    "owner"
                ],
                "description": "get user by uid",
                "operationId": "OwnerController.Get",
                "parameters": [
                    {
                        "in": "header",
                        "name": "token",
                        "description": "The token string",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "ownerID",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": ":ownerID is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "owner"
                ],
                "description": "update the user",
                "operationId": "OwnerController.Update",
                "parameters": [
                    {
                        "in": "header",
                        "name": "token",
                        "description": "The token string",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "ownerID",
                        "description": "The ownerID you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Owner"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": ":ownerID is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "owner"
                ],
                "description": "delete the user",
                "operationId": "OwnerController.Delete",
                "parameters": [
                    {
                        "in": "header",
                        "name": "token",
                        "description": "The token string",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "ownerID",
                        "description": "The uid you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "uid is empty"
                    }
                }
            }
        },
        "/owner/{ownerID}/create-house/": {
            "post": {
                "tags": [
                    "owner"
                ],
                "description": "create users",
                "operationId": "OwnerController.CreateHouse",
                "parameters": [
                    {
                        "in": "header",
                        "name": "token",
                        "description": "The token string",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.House"
                        }
                    },
                    {
                        "in": "path",
                        "name": "ownerID",
                        "description": "owner id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "files",
                        "description": "house image",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "file"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} models.House"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/owner/{ownerID}/houses/": {
            "get": {
                "tags": [
                    "owner"
                ],
                "description": "get all renters",
                "operationId": "OwnerController.GetAllHouse",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ownerID",
                        "description": "the house-id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Renter"
                        }
                    }
                }
            }
        },
        "/owner/{ownerID}/page-houses/": {
            "get": {
                "tags": [
                    "owner"
                ],
                "description": "get page house",
                "operationId": "OwnerController.GetPageHouse",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ownerID",
                        "description": "the house-id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "the page",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "the count",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.House"
                        }
                    }
                }
            }
        },
        "/renter/": {
            "get": {
                "tags": [
                    "renter"
                ],
                "description": "get all renters",
                "operationId": "RenterController.GetAll",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Renter"
                        }
                    }
                }
            }
        },
        "/renter/login/": {
            "post": {
                "tags": [
                    "renter"
                ],
                "description": "create users",
                "operationId": "RenterController.CreateRenter",
                "parameters": [
                    {
                        "in": "body",
                        "name": "login",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} success"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/renter/sign-up/": {
            "post": {
                "tags": [
                    "renter"
                ],
                "description": "create users",
                "operationId": "RenterController.CreateRenter",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Renter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} models.UserID"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/renter/{renterID}/": {
            "get": {
                "tags": [
                    "renter"
                ],
                "description": "get user by uid",
                "operationId": "RenterController.Get",
                "parameters": [
                    {
                        "in": "header",
                        "name": "token",
                        "description": "token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "renterID",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Renter"
                        }
                    },
                    "403": {
                        "description": ":renterID is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "renter"
                ],
                "description": "update the user",
                "operationId": "RenterController.Update",
                "parameters": [
                    {
                        "in": "header",
                        "name": "token",
                        "description": "The token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "renterID",
                        "description": "The uid you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Renter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": ":renterID is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "renter"
                ],
                "description": "delete the user",
                "operationId": "RenterController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "renterID",
                        "description": "The uid you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "renterID is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Address": {
            "title": "Address",
            "type": "object",
            "properties": {
                "district": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "models.Comment": {
            "title": "Comment",
            "type": "object",
            "properties": {
                "activate": {
                    "type": "boolean"
                },
                "content": {
                    "type": "string"
                },
                "header": {
                    "type": "string"
                },
                "house_id": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "post_time": {
                    "type": "integer",
                    "format": "int64"
                },
                "star": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.House": {
            "title": "House",
            "type": "object",
            "properties": {
                "activate": {
                    "type": "boolean"
                },
                "address": {
                    "$ref": "#/definitions/models.Address"
                },
                "content": {
                    "type": "string"
                },
                "expired_time": {
                    "type": "integer",
                    "format": "int64"
                },
                "header": {
                    "type": "string"
                },
                "house_type": {
                    "$ref": "#/definitions/models.HouseType"
                },
                "image_link": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "infrastructure": {
                    "$ref": "#/definitions/models.Infrastructure"
                },
                "near_by": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "owner_id": {
                    "type": "string"
                },
                "post_time": {
                    "type": "integer",
                    "format": "int64"
                },
                "price": {
                    "type": "integer",
                    "format": "int64"
                },
                "price_per_year": {
                    "type": "integer",
                    "format": "int64"
                },
                "with_owner": {
                    "type": "boolean"
                }
            }
        },
        "models.HouseType": {
            "title": "HouseType",
            "format": "int64",
            "type": "integer"
        },
        "models.Infrastructure": {
            "title": "Infrastructure",
            "type": "object",
            "properties": {
                "air_condition": {
                    "type": "boolean"
                },
                "balcony": {
                    "type": "boolean"
                },
                "electric_price": {
                    "type": "integer",
                    "format": "int64"
                },
                "heater": {
                    "type": "boolean"
                },
                "other": {
                    "type": "string"
                },
                "private_bathroom": {
                    "type": "boolean"
                },
                "water_price": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Login": {
            "title": "Login",
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Owner": {
            "title": "Owner",
            "type": "object",
            "properties": {
                "activate": {
                    "type": "boolean"
                },
                "address": {
                    "$ref": "#/definitions/models.Address"
                },
                "owner_full_name": {
                    "type": "string"
                },
                "owner_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "profile": {
                    "$ref": "#/definitions/models.Profile"
                }
            }
        },
        "models.Profile": {
            "title": "Profile",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id_card": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "models.Renter": {
            "title": "Renter",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "list_favourite": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "renter_full_name": {
                    "type": "string"
                },
                "renter_name": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "title": "User",
            "type": "object"
        }
    },
    "tags": [
        {
            "name": "owner",
            "description": "Operations about Owner\n"
        },
        {
            "name": "house",
            "description": "Operations about house\n"
        },
        {
            "name": "renter",
            "description": "Operations about Owner\n"
        }
    ]
}